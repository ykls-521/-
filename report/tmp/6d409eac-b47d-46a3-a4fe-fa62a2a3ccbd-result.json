{"name": "课程修改用例", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <test_case.test_lesson.TestLesson object at 0x000002AE08B8FC18>\nbody = '{\"action\":\"modify_course\",\"id\":\"xxxx\",\"newdata\":{ \"name\":\"松勤\",\"desc\":\"心田老师课程\",\"display_idx\":\"5\"}}'\nrepsData = '{\"retcode\": 0}'\n\n    @allure.story('课程修改接口')#二级\n    @allure.title('课程修改用例')#用例标签\n    @pytest.mark.parametrize('body,repsData',get_excelData('2-课程模块',47,49))\n    def test_lesson_modify(self,body,repsData):\n>       res = Lesson(self.session).lesson_modify(body)\n\ntest_lesson.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\lib\\apiLib\\lesson.py:47: in lesson_modify\n    return reps.json()\nd:\\tools\\python-3.6.6\\lib\\site-packages\\requests\\models.py:898: in json\n    return complexjson.loads(self.text, **kwargs)\nd:\\tools\\python-3.6.6\\lib\\json\\__init__.py:354: in loads\n    return _default_decoder.decode(s)\nd:\\tools\\python-3.6.6\\lib\\json\\decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x000002AE076373C8>\ns = '<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n  <...      display a standard page generated by the handler for this status code.\\n    </p>\\n  </div>\\n\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nd:\\tools\\python-3.6.6\\lib\\json\\decoder.py:357: JSONDecodeError"}, "parameters": [{"name": "body", "value": "'{\"action\":\"modify_course\",\"id\":\"xxxx\",\"newdata\":{ \"name\":\"松勤\",\"desc\":\"心田老师课程\",\"display_idx\":\"5\"}}'"}, {"name": "repsData", "value": "'{\"retcode\": 0}'"}], "start": 1597241021922, "stop": 1597241021961, "uuid": "17b068c7-ef31-4cfb-b31f-b0ff570bf3a3", "historyId": "a8717a36307c0583e92983bbd0dc3029", "testCaseId": "5a5ad131ec5766c44a2888de6a10be03", "fullName": "test_case.test_lesson.TestLesson#test_lesson_modify", "labels": [{"name": "story", "value": "课程修改接口"}, {"name": "feature", "value": "课程模块"}, {"name": "tag", "value": "lesson"}, {"name": "tag", "value": "@pytest.mark.usefixtures('lesson_delete_fixture_class')"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_lesson"}, {"name": "subSuite", "value": "TestLesson"}, {"name": "host", "value": "XinTian"}, {"name": "thread", "value": "14608-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_lesson"}]}